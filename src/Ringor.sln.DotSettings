<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeInspection/CodeAnnotations/PropagateAnnotations/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeInspection/ExcludedFiles/FileMasksToSkip/=_002A_002Emin_002Ecss/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=4B6EC4F6_002DFFD6_002D47F3_002DADC0_002DB1E4E58F7D89_002Fd_003Awwwroot/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=522D43E5_002D73D8_002D4D03_002D9F1B_002DC1DF91D8BF12_002Fd_003AViews_002Fd_003AUsers_002Fd_003AIndex/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=522D43E5_002D73D8_002D4D03_002D9F1B_002DC1DF91D8BF12_002Fd_003AViews_002Fd_003AWebhooks_002Fd_003AIndex/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=522D43E5_002D73D8_002D4D03_002D9F1B_002DC1DF91D8BF12_002Fd_003Awwwroot_002Fd_003Acss_002Fd_003Asemantic_002Dui_002Ff_003Asemantic_002Ecss/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=522D43E5_002D73D8_002D4D03_002D9F1B_002DC1DF91D8BF12_002Fd_003Awwwroot_002Fd_003Ajs_002Ff_003Ajquery_002Ejs/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=522D43E5_002D73D8_002D4D03_002D9F1B_002DC1DF91D8BF12_002Fd_003Awwwroot_002Fd_003Ajs_002Ff_003Asemantic_002Ejs/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=9133B01D_002D58EF_002D4956_002DA550_002D8067FD1D9A76_002Fd_003Awwwroot_002Fd_003Acss_002Fd_003Asemantic_002Dui_002Ff_003Asemantic_002Ecss/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArgumentsStyleNamedExpression/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/JsInspections/EnableJsxInJs/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/JsInspections/JsxInJs/@EntryValue">Always</s:String>
	<s:String x:Key="/Default/CodeInspection/JsInspections/LanguageLevel/@EntryValue">Experimental</s:String>
	<s:String x:Key="/Default/CodeInspection/TypeScriptInspections/Level/@EntryValue">TypeScript25</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Almost_0020Full_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Almost Full Cleanup"&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;FormatAttributeQuoteDescriptor&gt;True&lt;/FormatAttributeQuoteDescriptor&gt;&lt;CorrectVariableKindsDescriptor&gt;True&lt;/CorrectVariableKindsDescriptor&gt;&lt;VariablesToInnerScopesDescriptor&gt;True&lt;/VariablesToInnerScopesDescriptor&gt;&lt;StringToTemplatesDescriptor&gt;True&lt;/StringToTemplatesDescriptor&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;JsFormatDocComments&gt;True&lt;/JsFormatDocComments&gt;&lt;RemoveRedundantQualifiersTs&gt;True&lt;/RemoveRedundantQualifiersTs&gt;&lt;OptimizeImportsTs&gt;True&lt;/OptimizeImportsTs&gt;&lt;OptimizeReferenceCommentsTs&gt;True&lt;/OptimizeReferenceCommentsTs&gt;&lt;PublicModifierStyleTs&gt;True&lt;/PublicModifierStyleTs&gt;&lt;ExplicitAnyTs&gt;True&lt;/ExplicitAnyTs&gt;&lt;TypeAnnotationStyleTs&gt;True&lt;/TypeAnnotationStyleTs&gt;&lt;RelativePathStyleTs&gt;True&lt;/RelativePathStyleTs&gt;&lt;AsInsteadOfCastTs&gt;True&lt;/AsInsteadOfCastTs&gt;&lt;HtmlReformatCode&gt;True&lt;/HtmlReformatCode&gt;&lt;AspOptimizeRegisterDirectives&gt;True&lt;/AspOptimizeRegisterDirectives&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="True" ArrangeTypeMemberAccessModifier="True" SortModifiers="True" RemoveRedundantParentheses="True" AddMissingParentheses="True" ArrangeBraces="True" ArrangeAttributes="True" ArrangeArgumentsStyle="False" ArrangeCodeBodyStyle="True" ArrangeVarStyle="True" /&gt;&lt;RemoveCodeRedundanciesVB&gt;True&lt;/RemoveCodeRedundanciesVB&gt;&lt;CssAlphabetizeProperties&gt;True&lt;/CssAlphabetizeProperties&gt;&lt;VBOptimizeImports&gt;True&lt;/VBOptimizeImports&gt;&lt;VBShortenReferences&gt;True&lt;/VBShortenReferences&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSMakeAutoPropertyGetOnly&gt;True&lt;/CSMakeAutoPropertyGetOnly&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CssReformatCode&gt;True&lt;/CssReformatCode&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;VBFormatDocComments&gt;True&lt;/VBFormatDocComments&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/ARGUMENTS_OTHER/@EntryValue">Positional</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">RequiredForMultilineStatement</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ACCESSOR_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ACCESSOR_OWNER_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AFTER_BLOCK_STATEMENTS/@EntryValue">0</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/CASE_BLOCK_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue">TOGETHER_SAME_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOREACH_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INVOCABLE_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/OTHER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/TYPE_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">200</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasMember&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/HasMember&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Static fields and constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Field" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constructor" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Nested types"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Type" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="Default Pattern"&gt;&#xD;
    &lt;Entry DisplayName="Public Delegates" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public Enums" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Enum" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static Fields and Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Constructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Properties, Indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface Implementations" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Member" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Nested Types"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Type" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=DECLSPEC_005FPROPERTY/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=ENUM/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=ENUMERATOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=GETTER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=GLOBAL_005FFUNCTION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=GLOBAL_005FVARIABLE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=LOCAL_005FTYPEDEF/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=LOCAL_005FVARIABLE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=NAMESPACE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=PARAMETER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=SETTER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="set_" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=STRUCT/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=STRUCT_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="_" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=STRUCT_005FMETHODS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=TEMPLATE_005FPARAMETER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=TYPEDEF/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=UNION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CppNaming/UserRules/=UNION_005FMEMBER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=AD/@EntryIndexedValue">AD</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=ASCII/@EntryIndexedValue">ASCII</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=IE/@EntryIndexedValue">IE</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=IIS/@EntryIndexedValue">IIS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=JS/@EntryIndexedValue">JS</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=MSAL/@EntryIndexedValue">MSAL</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=OIDC/@EntryIndexedValue">OIDC</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=SPA/@EntryIndexedValue">SPA</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=WF/@EntryIndexedValue">WF</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FBLOCK_005FSCOPE_005FCONSTANT/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FBLOCK_005FSCOPE_005FFUNCTION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FBLOCK_005FSCOPE_005FVARIABLE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FCLASS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FCONSTRUCTOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FFUNCTION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FGLOBAL_005FVARIABLE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FLABEL/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FLOCAL_005FCONSTRUCTOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FLOCAL_005FVARIABLE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FOBJECT_005FPROPERTY_005FOF_005FFUNCTION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FPARAMETER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FCLASS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FENUM/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FENUM_005FMEMBER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FINTERFACE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="I" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FMIXED_005FENUM/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FMODULE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FMODULE_005FEXPORTED/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FMODULE_005FLOCAL/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPRIVATE_005FMEMBER_005FACCESSOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPRIVATE_005FSTATIC_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPRIVATE_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPRIVATE_005FTYPE_005FMETHOD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPROTECTED_005FMEMBER_005FACCESSOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPROTECTED_005FSTATIC_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPROTECTED_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPROTECTED_005FTYPE_005FMETHOD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPUBLIC_005FMEMBER_005FACCESSOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPUBLIC_005FSTATIC_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPUBLIC_005FTYPE_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FPUBLIC_005FTYPE_005FMETHOD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FTYPE_005FALIAS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=TS_005FTYPE_005FPARAMETER/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="T" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FHTML_005FCONTROL/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FTAG_005FNAME/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FTAG_005FPREFIX/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=NAMESPACE_005FALIAS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=XAML_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=XAML_005FRESOURCE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/ExcludedFiles/FilesAndFoldersThirdParty/=A30FB4CF_002D8EA1_002D44D7_002DA03D_002D6184AB67E69E_002Fd_003AApp/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/ExternalSources/Decompiler/DecompileMethodBodies/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/Environment/ExternalSources/NavigationMode/@EntryValue">Sources</s:String>
	<s:String x:Key="/Default/Environment/Hierarchy/PsiConfigurationSettingsKey/CustomLocation/@EntryValue">C:\Users\David\AppData\Local\JetBrains\Transient\ReSharperPlatformVs15\v11_6bccf12f\SolutionCaches</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=AutoRecoverer/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=Format/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=Roslyn_002Dswea/@EntryIndexedValue">DO_NOTHING</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=ShowAnnotations/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=SolExp_002DTrack/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=StartPage_002DIsDownloadRefreshEnabled/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=StartPage_002DOnEnvironmentStatup/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=SyncSettings/@EntryIndexedValue">DO_NOTHING</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=TextEditor_002DCodeLens/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=TextEditor_002DTrackChanges_002D2/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=VCS/@EntryIndexedValue">DO_NOTHING</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=VsBulb/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchBehaviour/=XAML_0020Designer/@EntryIndexedValue">LIVE_MONITOR</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchConflictResolutionMode/=Format/@EntryIndexedValue">AUTO_FIX</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchConflictResolutionMode/=VCS/@EntryIndexedValue"></s:String>
	<s:Boolean x:Key="/Default/Environment/PerformanceGuide/SwitchConflictResolutionMode/=VCS/@EntryIndexRemoved">True</s:Boolean>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchConflictResolutionMode/=VsBulb/@EntryIndexedValue">AUTO_FIX</s:String>
	<s:String x:Key="/Default/Environment/PerformanceGuide/SwitchConflictResolutionMode/=XAML_0020Designer/@EntryIndexedValue">AUTO_FIX</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpAttributeForSingleLineMethodUpgrade/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpRenamePlacementToArrangementMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002ECSharpPlaceAttributeOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EJavaScript_002EUtil_002EJsInspectionsSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/UnitTesting/DisabledProviders/=Jasmine/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/UnitTesting/DisabledProviders/=QUnit/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Categories/=Imported_00202018_002D11_002D08/@EntryIndexedValue">Imported 2018-11-08</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Description/@EntryValue">Creates a new asynchronous test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Field/=TestName/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Field/=TestName/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/Type/@EntryValue">InCSharpTypeMember</s:String>
	
	
	
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Shortcut/@EntryValue">testasync</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83428CE07161C543970334A05993DD8A/Text/@EntryValue">[Fact]&#xD;
public async Task $TestName$() {&#xD;
    true.Should().BeFalse();&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Categories/=Imported_00202018_002D11_002D08/@EntryIndexedValue">Imported 2018-11-08</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Description/@EntryValue">Creates a new test class</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Class/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Class/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Class/InitialRange/@EntryValue">3</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Class/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Namespace/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Namespace/Expression/@EntryValue">fileDefaultNamespace()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Namespace/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Field/=Namespace/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Scope/=558F05AA0DE96347816FF785232CFB2A/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Scope/=558F05AA0DE96347816FF785232CFB2A/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Scope/=558F05AA0DE96347816FF785232CFB2A/Type/@EntryValue">InCSharpTypeAndNamespace</s:String>
	
	
	
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Shortcut/@EntryValue">testclass</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9CB805489BA5074B86081235E2A7FF67/Text/@EntryValue">using FluentAssertions;&#xD;
using Xunit;&#xD;
&#xD;
namespace $Namespace$ {&#xD;
    public class $Class$Tests {&#xD;
        private readonly $Class$ _sut;&#xD;
&#xD;
        public $Class$Tests() {&#xD;
            _sut = new $Class$();&#xD;
        }&#xD;
    }&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Categories/=Imported_00202018_002D11_002D08/@EntryIndexedValue">Imported 2018-11-08</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Description/@EntryValue">Creates a new inner class to test a specific method</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=ClassTests/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=ClassTests/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=ClassTests/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=MethodName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=MethodName/Expression/@EntryValue">complete()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=MethodName/InitialRange/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Field/=MethodName/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/Type/@EntryValue">InCSharpTypeMember</s:String>
	
	
	
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Shortcut/@EntryValue">testmethod</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B625301AFE303443894AF48E90C7C68D/Text/@EntryValue">public class $MethodName$ : $ClassTests$ {&#xD;
    public $MethodName$() {&#xD;
        _sut.$MethodName$()&#xD;
    }&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Categories/=Imported_00202018_002D11_002D08/@EntryIndexedValue">Imported 2018-11-08</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Description/@EntryValue">Creates a new test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Field/=TestName/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Field/=TestName/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Scope/=B68999B9D6B43E47A02B22C12A54C3CC/Type/@EntryValue">InCSharpTypeMember</s:String>
	
	
	
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Shortcut/@EntryValue">test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=BCC5A8FCF51ED74AA625A2799B3D7A13/Text/@EntryValue">[Fact]&#xD;
public void $TestName$() {&#xD;
    true.Should().BeFalse();&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=exp/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=exp/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=exp/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=type/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=type/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=type/Properties/=Type/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/CustomPatternPlaceholder/=type/Type/@EntryValue">TypePlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/ReplaceComment/@EntryValue">Replace with .Should().BeOfType()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/ReplacePattern/@EntryValue">$exp$.Should().BeOfType&lt;$type$&gt;()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/SearchPattern/@EntryValue">Assert.That($exp$, Is.TypeOf&lt;$type$&gt;())</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=00BEF0B6DA57EF449E10C4A73DD3DF9E/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/Comment/@EntryValue">Do not use static Assert methods: Assert.True</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/ReplacePattern/@EntryValue">$exp$.Should().BeTrue();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/SearchPattern/@EntryValue">Assert.True($exp$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=076E0F30E98803438B07D0C589734226/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Is.EqualTo</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp1/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp1/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp1/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp1/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp2/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp2/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp2/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/CustomPatternPlaceholder/=exp2/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/ReplaceComment/@EntryValue">Replace with .Should().Be()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/ReplacePattern/@EntryValue">$exp1$.Should().Be($exp2$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/SearchPattern/@EntryValue">Assert.That($exp1$, Is.EqualTo($exp2$));</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=0BD8BC5A6A1D234C81CBFC09CEC65BB6/Severity/@EntryValue">ERROR</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=175BA528A3239446A97E8D44052FFBDA/Comment/@EntryValue">Do not use static Assert methods: Assert.Throws</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=175BA528A3239446A97E8D44052FFBDA/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=175BA528A3239446A97E8D44052FFBDA/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=175BA528A3239446A97E8D44052FFBDA/ReplacePattern/@EntryValue">new Action($exp$).Should().Throw&lt;$TException$&gt;();</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/Comment/@EntryValue">Do not use static Assert methods: Assert.NotEmpty</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/ReplaceComment/@EntryValue">Replace with Should().NotBeEmpty()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/ReplacePattern/@EntryValue">$exp$.Should().NotBeEmpty();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/SearchPattern/@EntryValue">Assert.NotEmpty($exp$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=18753500E3B1E1499E4AF91180BF20C8/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/Comment/@EntryValue">Do not use static Assert methods: Assert.IsType</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=TType/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=TType/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=TType/Properties/=Type/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/CustomPatternPlaceholder/=TType/Type/@EntryValue">TypePlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/ReplaceComment/@EntryValue">Replace with Should().BeOfType()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/ReplacePattern/@EntryValue">$exp$.Should().BeOfType&lt;$TType$&gt;();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/SearchPattern/@EntryValue">Assert.IsType&lt;$TType$&gt;($exp$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1F8AA16A13F4AC4C888DC87CF2E08075/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/Comment/@EntryValue">Do not use static Assert methods: Assert.Equal</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var1/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var1/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var1/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var1/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var2/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var2/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var2/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/CustomPatternPlaceholder/=var2/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/ReplaceComment/@EntryValue">Replace with .Should().Be()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/ReplacePattern/@EntryValue">$var2$.Should().Be($var1$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/SearchPattern/@EntryValue">Assert.Equal($var1$, $var2$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=216AF0DF618F7141BE4F206AF22B2D7D/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Throws</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=Exception/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=Exception/Properties/=CaseSensitive/@EntryIndexedValue">True</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=Exception/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=Exception/Properties/=RegEx/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=Exception/Type/@EntryValue">IdentifierPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=exp/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=TException/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=TException/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=TException/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=TException/Properties/=Type/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/CustomPatternPlaceholder/=TException/Type/@EntryValue">TypePlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/ReplaceComment/@EntryValue">Replace with .ShouldThrow&lt;&gt;()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/ReplacePattern/@EntryValue">new Action($exp$).ShouldThrow&lt;$TException$&gt;()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/SearchPattern/@EntryValue">Assert.That($exp$, Throws.InstanceOf&lt;$TException$&gt;())</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=36A10BC05353734288DE7C955FF42495/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/Comment/@EntryValue">Do not use static Assert methods: Assert.That with a boolean</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/CustomPatternPlaceholder/=exp/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/CustomPatternPlaceholder/=exp/Properties/=ExpressionType/@EntryIndexedValue">System.Boolean</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/CustomPatternPlaceholder/=exp/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/ReplaceComment/@EntryValue">Replace with .Should().BeTrue()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/ReplacePattern/@EntryValue">$exp$.Should().BeTrue();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/SearchPattern/@EntryValue">Assert.That($exp$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3AA6039BDF696F42891B15BB664C4FD0/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/Comment/@EntryValue">Do not use static Assert methods: Assert.ThrowsAsync</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=TException/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=TException/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=TException/Properties/=Type/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/CustomPatternPlaceholder/=TException/Type/@EntryValue">TypePlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/ReplaceComment/@EntryValue">Replace with new Func().ShouldThrow()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/ReplacePattern/@EntryValue">new Func&lt;Task&gt;($exp$).Should().Throw&lt;$TException$&gt;();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/SearchPattern/@EntryValue">Assert.ThrowsAsync&lt;$TException$&gt;($exp$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=3B1C581B1600704AB84932AA901320F2/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=56F303363924B4488069C6E70655C50D/@KeyIndexDefined">False</s:Boolean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=7D62F25431DE744F89C8222AACA33960/@KeyIndexDefined">False</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Is.Empty</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/ReplaceComment/@EntryValue">Replace with .Should().BeEmpty()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/ReplacePattern/@EntryValue">$exp$.Should().BeEmpty()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/SearchPattern/@EntryValue">Assert.That($exp$, Is.Empty)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=825EC8077E08A746B399AD02BD7CAFED/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/Comment/@EntryValue">Do not use static Assert methods: Assert.Same</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp1/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp1/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp1/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp1/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp2/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp2/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp2/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/CustomPatternPlaceholder/=exp2/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/ReplaceComment/@EntryValue">Replace with Should().BeSameAs()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/ReplacePattern/@EntryValue">$exp1$.Should().BeSameAs($exp2$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/SearchPattern/@EntryValue">Assert.Same($exp1$, $exp2$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8EB158990054DA44BBBA42BEB489AE1E/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/Comment/@EntryValue">Do not use static Assert methods: Assert.Empty</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/ReplaceComment/@EntryValue">Replace with .Should().BeEmpty()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/ReplacePattern/@EntryValue">$exp$.Should().BeEmpty();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/SearchPattern/@EntryValue">Assert.Empty($exp$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=924294767412CD4EB6D538B217B1D13C/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Has.Count</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=count/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=count/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=count/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=count/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=exp/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=exp/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/CustomPatternPlaceholder/=exp/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/ReplaceComment/@EntryValue">Replace with .Should().HaveCount()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/ReplacePattern/@EntryValue">$exp$.Should().HaveCount($count$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/SearchPattern/@EntryValue">Assert.That($exp$, Has.Count.EqualTo($count$))</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AB7F51BB7B4632499046B8828CDE32FF/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Is.False</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/CustomPatternPlaceholder/=exp/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/CustomPatternPlaceholder/=exp/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/CustomPatternPlaceholder/=exp/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/ReplaceComment/@EntryValue">Replace with .Should().BeFalse()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/ReplacePattern/@EntryValue">$exp$.Should().BeFalse()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/SearchPattern/@EntryValue">Assert.That($exp$, Is.False)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=E70BC75FBAC5664283DCF3BF2723EF28/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/Comment/@EntryValue">Do not use static Assert methods: Assert.That with Is.True</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/CustomPatternPlaceholder/=exp/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/CustomPatternPlaceholder/=exp/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/CustomPatternPlaceholder/=exp/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/CustomPatternPlaceholder/=exp/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/LanguageName/@EntryValue">CSHARP</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/MatchCatchClauseWithoutExceptionFilter/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/ReplaceComment/@EntryValue">Replace with .Should().BeTrue()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/ReplacePattern/@EntryValue">$exp$.Should().BeTrue()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/SearchPattern/@EntryValue">Assert.That($exp$, Is.True)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F5A5CD7C4D6092419443E1D212D7FE74/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=appsettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Crontab/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Dalion/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Enqueued/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Enricher/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Enrichers/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Flurl/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Hangfire/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ISPA/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Lievrouw/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Matics/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Mongo/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Prepending/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Reco/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Ringor/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Serilog/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Unclosable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Versioning/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Webhost/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=zoid/@EntryIndexedValue">True</s:Boolean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	</wpf:ResourceDictionary>