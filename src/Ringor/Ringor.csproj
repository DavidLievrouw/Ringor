<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <RootNamespace>Dalion.Ringor</RootNamespace>
    <UserSecretsId>a696471a-0078-4da7-a0b4-9e03d13fb1d3</UserSecretsId>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>C:\Workspace\Ringor\src\Ringor\bin\Debug\Ringor.xml</DocumentationFile>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>C:\Workspace\Ringor\src\Ringor\bin\Release\Ringor.xml</DocumentationFile>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>

  <Target Name="InitVersion" BeforeTargets="BeforeBuild">
    <ReadLinesFromFile File="version.txt">
      <Output TaskParameter="Lines" PropertyName="ApplicationVersion" />
    </ReadLinesFromFile>
    <PropertyGroup>
      <ProductVersion Condition="'$(ProductVersion)'==''">$(ApplicationVersion).0</ProductVersion>
      <Version>$(ProductVersion)</Version>
      <InformationalVersion>$(ProductVersion)</InformationalVersion>
    </PropertyGroup>
  </Target>

  <ItemGroup>
    <Content Update="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.Production.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
    
    <DotNetCliToolReference Include="Microsoft.DotNet.Xdt.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Ringor.Api\Ringor.Api.csproj" />
  </ItemGroup>

  <!-- Delete appsettings.{Environment}.json that are not applicable to the specified environment -->
  <Target Name="DeleteUnusedAppsettingsFiles" AfterTargets="AfterPublish" Condition="'$(PublishEnvironment)' != ''">
    <Message Text="Publish environment: $(PublishEnvironment)" Importance="High" />
    <Delete Files="$(PublishDir)appsettings.Development.json" Condition="'$(PublishDir)' != '' And Exists('$(PublishDir)appsettings.Development.json') And '$(PublishEnvironment)' != 'Development'" />
    <Delete Files="$(PublishDir)appsettings.Production.json" Condition="'$(PublishDir)' != '' And Exists('$(PublishDir)appsettings.Production.json') And '$(PublishEnvironment)' != 'Production'" />
    <Delete Files="$(PublishUrl)appsettings.Development.json" Condition="'$(PublishUrl)' != '' And Exists('$(PublishUrl)appsettings.Development.json') And '$(PublishEnvironment)' != 'Development'" />
    <Delete Files="$(PublishUrl)appsettings.Production.json" Condition="'$(PublishUrl)' != '' And Exists('$(PublishUrl)appsettings.Production.json') And '$(PublishEnvironment)' != 'Production'" />
  </Target>

  <!-- Transform web.config using web.{Environment}.config -->
  <Target Name="ApplyXdtConfigTransformBefore" BeforeTargets="_TransformWebConfig" Condition="'$(PublishEnvironment)' != ''">
    <Message Text="Configuration for web.config transformation: $(PublishEnvironment)" Importance="High" />
    <PropertyGroup>
      <_SourceWebConfig>$(MSBuildProjectDirectory)\web.config</_SourceWebConfig>
      <_XdtTransform>$(MSBuildProjectDirectory)\web.$(PublishEnvironment).config</_XdtTransform>
      <_TargetWebConfig>$(PublishDir)web.config</_TargetWebConfig>
    </PropertyGroup>
    <Exec Command="dotnet transform-xdt --xml &quot;$(_SourceWebConfig)&quot; --transform &quot;$(_XdtTransform)&quot; --output &quot;$(_TargetWebConfig)&quot;" Condition="Exists('$(_XdtTransform)')" />
    <Delete Files="$(PublishDir)web.Development.config" Condition="Exists('$(PublishDir)web.Development.config')" />
    <Delete Files="$(PublishDir)web.Production.config" Condition="Exists('$(PublishDir)web.Production.config')" />
  </Target>

</Project>
